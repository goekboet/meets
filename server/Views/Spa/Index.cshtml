@using Meets.Controllers;
@using Meets.Services;
@using Microsoft.Extensions.Options

@model AppState;

@{
    ViewData["Title"] = "Home Page";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@inject IOptions<Broker> Broker

@functions {
    string user() => Model.Name != null
        ? $"'{Html.Encode(Model.Name)}'"
        : "null";

    string csrf() => $"'{Xsrf.GetAndStoreTokens(Context).RequestToken}'";

    string baseUrl() => $"'{Broker.Value.UnAuthorized}'";
}

<script>
    let appstate = 
        { 
            name: @Html.Raw(user()),
            csrf: @Html.Raw(csrf()),
            focus: initWeekpointer(),
            apiBaseUrl: @Html.Raw(baseUrl())
        };

    var app = Elm.Main.init({flags: appstate});
    app.ports.getWeekpointer.subscribe(v => {
        app.ports.gotWeekpointer.send(getWeekpointer(v));
    })
    app.ports.getTimesClock.subscribe(v => {
        //console.log("times")
        //console.log(v);
        app.ports.gotTimesClock.send(printOclock(v));
    })
    app.ports.getBookingsClock.subscribe(v => {
        //console.log("bookings")
        //console.log(v);
        app.ports.gotBookingsClock.send(printOclock(v));
    })
</script>